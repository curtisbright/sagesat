
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '$R\x17i\x87A\x8a\xcb\r\xa97\x02~G\xa3\x11'
    
_lr_action_items = {'AND':([9,10,11,14,22,23,25,26,27,30,35,39,],[19,-24,-23,-22,19,19,19,19,19,-25,-18,19,]),'LBRACKET':([44,],[46,]),'RPAREN':([10,11,14,21,22,23,25,26,27,28,29,30,31,32,34,35,37,38,39,40,42,],[-24,-23,-22,-26,30,-21,-19,-20,-26,35,-14,-25,-26,-13,-16,-18,41,-10,-26,-9,-15,]),'GRAPH':([0,2,3,4,5,8,9,10,11,14,15,16,18,23,25,26,30,35,41,43,45,48,],[6,-3,-5,6,-4,-6,-17,-24,-23,-22,-1,-2,-7,-21,-19,-20,-25,-18,-26,-8,-12,-11,]),'NUMBER':([1,12,13,19,20,21,24,33,36,46,],[10,10,10,10,10,10,31,10,40,10,]),'OR':([9,10,11,14,22,23,25,26,27,30,35,39,],[20,-24,-23,-22,20,20,20,20,20,-25,-18,20,]),'ASSERT':([0,2,3,4,5,8,9,10,11,14,15,16,18,23,25,26,30,35,41,43,45,48,],[1,-3,-5,1,-4,-6,-17,-24,-23,-22,-1,-2,-7,-21,-19,-20,-25,-18,-26,-8,-12,-11,]),'EQUALS':([41,],[44,]),'COLON':([31,],[36,]),'BOOL':([0,2,3,4,5,8,9,10,11,14,15,16,18,23,25,26,30,35,41,43,45,48,],[7,-3,-5,7,-4,-6,-17,-24,-23,-22,-1,-2,-7,-21,-19,-20,-25,-18,-26,-8,-12,-11,]),'LPAREN':([1,11,12,13,17,19,20,21,33,46,],[12,21,12,12,24,12,12,12,12,12,]),'NOT':([1,12,13,19,20,21,33,46,],[13,13,13,13,13,13,13,13,]),'COMMA':([10,11,14,23,25,26,27,30,35,39,],[-24,-23,-22,-21,-19,-20,33,-25,-18,33,]),'RBRACKET':([10,11,14,23,25,26,27,29,30,32,34,35,39,42,46,47,],[-24,-23,-22,-21,-19,-20,-26,-14,-25,-13,-16,-18,-26,-15,-26,48,]),'ID':([1,6,7,12,13,19,20,21,33,46,],[11,17,18,11,11,11,11,11,11,11,]),'$end':([2,3,4,5,8,9,10,11,14,15,16,18,23,25,26,30,35,41,43,45,48,],[-3,-5,0,-4,-6,-17,-24,-23,-22,-1,-2,-7,-21,-19,-20,-25,-18,-26,-8,-12,-11,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'graphdef':([41,],[43,]),'nonemptylist':([27,39,],[32,42,]),'expr':([1,12,13,19,20,21,33,46,],[9,22,23,25,26,27,39,27,]),'vardecl':([0,4,],[2,15,]),'optgraphrange':([31,],[37,]),'boolvardecl':([0,4,],[3,3,]),'program':([0,],[4,]),'assertdecl':([0,4,],[5,16,]),'operation':([1,12,13,19,20,21,33,46,],[14,14,14,14,14,14,14,14,]),'graphvardecl':([0,4,],[8,8,]),'exprlist':([21,46,],[28,47,]),'empty':([21,27,31,39,41,46,],[29,34,38,34,45,29,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program vardecl','program',2,'p_program','/home/ezulkosk/git/sagesat/src/front/parser.py',20),
  ('program -> program assertdecl','program',2,'p_program','/home/ezulkosk/git/sagesat/src/front/parser.py',21),
  ('program -> vardecl','program',1,'p_program','/home/ezulkosk/git/sagesat/src/front/parser.py',22),
  ('program -> assertdecl','program',1,'p_program','/home/ezulkosk/git/sagesat/src/front/parser.py',23),
  ('vardecl -> boolvardecl','vardecl',1,'p_vardecl','/home/ezulkosk/git/sagesat/src/front/parser.py',33),
  ('vardecl -> graphvardecl','vardecl',1,'p_vardecl','/home/ezulkosk/git/sagesat/src/front/parser.py',34),
  ('boolvardecl -> BOOL ID','boolvardecl',2,'p_boolvardecl','/home/ezulkosk/git/sagesat/src/front/parser.py',39),
  ('graphvardecl -> GRAPH ID LPAREN NUMBER optgraphrange RPAREN graphdef','graphvardecl',7,'p_graphvardecl','/home/ezulkosk/git/sagesat/src/front/parser.py',44),
  ('optgraphrange -> COLON NUMBER','optgraphrange',2,'p_optgraphrange','/home/ezulkosk/git/sagesat/src/front/parser.py',50),
  ('optgraphrange -> empty','optgraphrange',1,'p_optgraphrange','/home/ezulkosk/git/sagesat/src/front/parser.py',51),
  ('graphdef -> EQUALS LBRACKET exprlist RBRACKET','graphdef',4,'p_graphdef','/home/ezulkosk/git/sagesat/src/front/parser.py',60),
  ('graphdef -> empty','graphdef',1,'p_graphdef','/home/ezulkosk/git/sagesat/src/front/parser.py',61),
  ('exprlist -> expr nonemptylist','exprlist',2,'p_exprlist','/home/ezulkosk/git/sagesat/src/front/parser.py',70),
  ('exprlist -> empty','exprlist',1,'p_exprlist','/home/ezulkosk/git/sagesat/src/front/parser.py',71),
  ('nonemptylist -> COMMA expr nonemptylist','nonemptylist',3,'p_nonemptylist','/home/ezulkosk/git/sagesat/src/front/parser.py',83),
  ('nonemptylist -> empty','nonemptylist',1,'p_nonemptylist','/home/ezulkosk/git/sagesat/src/front/parser.py',84),
  ('assertdecl -> ASSERT expr','assertdecl',2,'p_assertdecl','/home/ezulkosk/git/sagesat/src/front/parser.py',94),
  ('operation -> ID LPAREN exprlist RPAREN','operation',4,'p_operation','/home/ezulkosk/git/sagesat/src/front/parser.py',98),
  ('expr -> expr AND expr','expr',3,'p_expression','/home/ezulkosk/git/sagesat/src/front/parser.py',103),
  ('expr -> expr OR expr','expr',3,'p_expression','/home/ezulkosk/git/sagesat/src/front/parser.py',104),
  ('expr -> NOT expr','expr',2,'p_expression','/home/ezulkosk/git/sagesat/src/front/parser.py',105),
  ('expr -> operation','expr',1,'p_expression','/home/ezulkosk/git/sagesat/src/front/parser.py',106),
  ('expr -> ID','expr',1,'p_expression','/home/ezulkosk/git/sagesat/src/front/parser.py',107),
  ('expr -> NUMBER','expr',1,'p_expression','/home/ezulkosk/git/sagesat/src/front/parser.py',108),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expression_group','/home/ezulkosk/git/sagesat/src/front/parser.py',120),
  ('empty -> <empty>','empty',0,'p_empty','/home/ezulkosk/git/sagesat/src/front/parser.py',135),
]
